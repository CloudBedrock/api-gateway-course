AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  AlarmEMail:
    Description: EMail address to notify if there are any operational issues
    Type: String
    AllowedPattern: >-
      ([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)
    ConstraintDescription: must be a valid email address.
  StreamName:
    Description: Name for your Stream
    Type: String
Resources:
  RootRole: 
    Type: "AWS::IAM::Role"
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "apigateway.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"
      Policies: 
        - 
          PolicyName: "root"
          PolicyDocument: 
            Version: "2012-10-17"
            Statement: 
              - 
                Effect: "Allow"
                Action:
                  - "kinesis:*"
                Resource: '*'
  MyStream:
    Type: AWS::Kinesis::Stream
    Properties:
      Name: MyKinesisStream
      RetentionPeriodHours: 24
      ShardCount: 1
      Tags:
        -
          Key: Environment
          Value: Production

  KinesisProxyAPI:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: KinesisProxy
      Description: A demo API Kinesis Proxy
      Body:
        openapi: 3.0.0
        info:
          version: '2016-03-31T18:25:32Z'
          title: KinesisProxy
        paths:
          /streams:
            get:
              responses:
                '200':
                  description: 200 response
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/Empty'
              x-amazon-apigateway-integration:
                credentials: !GetAtt
                  - RootRole
                  - Arn
                responses:
                  default:
                    statusCode: '200'
                requestTemplates:
                  application/json: |-
                    {
                    }
                uri: !Sub 'arn:aws:apigateway:${AWS::Region}:kinesis:action/ListStreams'
                httpMethod: POST
                requestParameters:
                  integration.request.header.Content-Type: '''application/x-amz-json-1.1'''
                type: aws
          '/streams/{stream-name}':
            get:
              parameters:
                - name: stream-name
                  in: path
                  required: true
                  schema:
                    type: string
              responses:
                '200':
                  description: 200 response
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/Empty'
              x-amazon-apigateway-integration:
                credentials: !GetAtt
                  - RootRole
                  - Arn
                responses:
                  default:
                    statusCode: '200'
                requestTemplates:
                  application/json: |-
                    {
                        "StreamName": "$input.params('stream-name')"
                    }
                uri: !Sub 'arn:aws:apigateway:${AWS::Region}:kinesis:action/DescribeStream'
                httpMethod: POST
                type: aws
            post:
              parameters:
                - name: stream-name
                  in: path
                  required: true
                  schema:
                    type: string
              responses:
                '200':
                  description: 200 response
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/Empty'
              x-amazon-apigateway-integration:
                credentials: !GetAtt
                  - RootRole
                  - Arn
                responses:
                  default:
                    statusCode: '200'
                requestTemplates:
                  application/json: |-
                    {
                        "ShardCount": 5,
                        "StreamName": "$input.params('stream-name')"
                    }
                uri: !Sub 'arn:aws:apigateway:${AWS::Region}:kinesis:action/CreateStream'
                httpMethod: POST
                requestParameters:
                  integration.request.header.Content-Type: '''application/x-amz-json-1.1'''
                type: aws
            delete:
              parameters:
                - name: stream-name
                  in: path
                  required: true
                  schema:
                    type: string
              responses:
                '200':
                  description: 200 response
                  headers:
                    Content-Type:
                      schema:
                        type: string
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/Empty'
                '400':
                  description: 400 response
                  headers:
                    Content-Type:
                      schema:
                        type: string
                '500':
                  description: 500 response
                  headers:
                    Content-Type:
                      schema:
                        type: string
              x-amazon-apigateway-integration:
                credentials: !GetAtt
                  - RootRole
                  - Arn
                responses:
                  '4\d{2}':
                    statusCode: '400'
                    responseParameters:
                      method.response.header.Content-Type: integration.response.header.Content-Type
                  default:
                    statusCode: '200'
                    responseParameters:
                      method.response.header.Content-Type: integration.response.header.Content-Type
                  '5\d{2}':
                    statusCode: '500'
                    responseParameters:
                      method.response.header.Content-Type: integration.response.header.Content-Type
                requestTemplates:
                  application/json: |-
                    {
                        "StreamName": "$input.params('stream-name')"
                    }
                uri: !Sub 'arn:aws:apigateway:${AWS::Region}:kinesis:action/DeleteStream'
                httpMethod: POST
                requestParameters:
                  integration.request.header.Content-Type: '''application/x-amz-json-1.1'''
                type: aws
          '/streams/{stream-name}/record':
            put:
              parameters:
                - name: stream-name
                  in: path
                  required: true
                  schema:
                    type: string
              responses:
                '200':
                  description: 200 response
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/Empty'
              x-amazon-apigateway-integration:
                credentials: !GetAtt
                  - RootRole
                  - Arn
                responses:
                  default:
                    statusCode: '200'
                requestTemplates:
                  application/json: |-
                    {
                        "StreamName": "$input.params('stream-name')",
                        "Data": "$util.base64Encode($input.json('$.Data'))",
                        "PartitionKey": "$input.path('$.PartitionKey')"
                    }
                uri: !Sub 'arn:aws:apigateway:${AWS::Region}:kinesis:action/PutRecord'
                httpMethod: POST
                requestParameters:
                  integration.request.header.Content-Type: '''application/x-amz-json-1.1'''
                type: aws
          '/streams/{stream-name}/records':
            get:
              parameters:
                - name: stream-name
                  in: path
                  required: true
                  schema:
                    type: string
                - name: Shard-Iterator
                  in: header
                  required: false
                  schema:
                    type: string
              responses:
                '200':
                  description: 200 response
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/Empty'
              x-amazon-apigateway-integration:
                credentials: !GetAtt
                  - RootRole
                  - Arn
                responses:
                  default:
                    statusCode: '200'
                requestTemplates:
                  application/json: |-
                    {
                        "ShardIterator": "$input.params('Shard-Iterator')"
                    }
                uri: !Sub 'arn:aws:apigateway:${AWS::Region}:kinesis:action/GetRecords'
                httpMethod: POST
                requestParameters:
                  integration.request.header.Content-Type: '''application/x-amz-json-1.1'''
                type: aws
            put:
              parameters:
                - name: Content-Type
                  in: header
                  required: false
                  schema:
                    type: string
                - name: stream-name
                  in: path
                  required: true
                  schema:
                    type: string
              responses:
                '200':
                  description: 200 response
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/Empty'
              x-amazon-apigateway-integration:
                credentials: !GetAtt
                  - RootRole
                  - Arn
                responses:
                  default:
                    statusCode: '200'
                requestTemplates:
                  application/json: |-
                    {
                        "StreamName": "$input.params('stream-name')",
                        "Records": [
                              {
                                "Data": "$util.base64Encode($elem.data)",
                                "PartitionKey": "$elem.partition-key"
                              }#if($foreach.hasNext),#end
                        ]
                    }
                  application/x-amz-json-1.1: |-
                    {
                      "StreamName": "$input.params('stream-name')",
                      "records" : [
                        {
                            "Data" : "$elem.data",
                            "PartitionKey" : "$elem.partition-key"
                        }#if($foreach.hasNext),#end
                      ]
                    }
                uri: !Sub 'arn:aws:apigateway:${AWS::Region}:kinesis:action/PutRecords'
                httpMethod: POST
                requestParameters:
                  integration.request.header.Content-Type: '''application/x-amz-json-1.1'''
                type: aws
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/PutRecordsMethodRequestPayload'
                  application/x-amz-json-1.1:
                    schema:
                      $ref: '#/components/schemas/PutRecordsMethodRequestPayload'
                required: true
          '/streams/{stream-name}/sharditerator':
            get:
              parameters:
                - name: stream-name
                  in: path
                  required: true
                  schema:
                    type: string
                - name: shard-id
                  in: query
                  required: false
                  schema:
                    type: string
              responses:
                '200':
                  description: 200 response
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/Empty'
              x-amazon-apigateway-integration:
                credentials: !GetAtt
                  - RootRole
                  - Arn
                responses:
                  default:
                    statusCode: '200'
                requestTemplates:
                  application/json: |-
                    {
                        "ShardId": "$input.params('shard-id')",
                        "ShardIteratorType": "TRIM_HORIZON",
                        "StreamName": "$input.params('stream-name')"
                    }
                uri: !Sub 'arn:aws:apigateway:${AWS::Region}:kinesis:action/GetShardIterator'
                httpMethod: POST
                requestParameters:
                  integration.request.header.Content-Type: '''application/x-amz-json-1.1'''
                type: aws
        servers:
          - url: 'https://wd4zclrobb.execute-api.us-east-1.amazonaws.com/{basePath}'
            variables:
              basePath:
                default: /test
        components:
          schemas:
            PutRecordsMethodRequestPayload:
              type: object
              properties:
                records:
                  type: array
                  items:
                    type: object
                    properties:
                      data:
                        type: string
                      partition-key:
                        type: string
            Empty:
              type: object
